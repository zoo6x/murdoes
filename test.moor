cr
cr
.\ **** TESTS ****
cr
cr

2 3 + ..
10203040 ..

.\ Variables and constants
:: a 12345 var
:: b 98765 val

: qq b .. ;
qq

: q
  a | .. @ ..
  b | .. a !
  a | .. @ ..
;
333 | .. q ..

.\ Control structures
16 cell/ .

: q branch [ >mark >resolve ] ;
q
: q branch [ >mark ] 98765 .. [ >resolve ] ;
q
: q ?branch [ >mark ] abcdef .. [ >resolve ] ;
0 q
1 q
: q 5 [ <mark ] 2a emit 1- | ?branch [ <resolve ] ;
q
: q ?branch [ >mark ]  31 .. branch [ >mark >< >resolve ]  30 .. [ >resolve ]  .. 39 .. ;
33 1 q
33 0 q
: cs1 if 31 .. else 30 .. then .. 39 .. ;
33 1 cs1
33 0 cs1
: cs2 0 begin 2a emit 1+ until 2b emit ;
cs2
: cs3 5 begin 2a emit 1- | while 2b emit repeat 2a emit ;
cs3
: cs4 3 begin 30 emit 1- | continue 31 emit >< | break 32 emit | while 33 emit repeat 34 emit then 35 emit ;
0 cs4 
1 cs4 

.\ Decompiler
\ see >resolve
see repeat
see while
see else
see val
see cs1
see cs2
see cs3
see cs4

.\ Stack manipulation words
98 99 - ..
33 | .. .. cr
33 34 42 _ .. .. cr
99 11 22 33 >>> .. .. .. 
99 11 22 33 <<< .. .. .. 

2 3 >| 1+ 1+ \ 2 3 4
cr .. .. .. cr
1 2 >|>| .. .. .. .. 

.\ Assembler
3 1 2 and .. .. 


r2 r2 rexrr.q .. 
r1 r0 rexrr.q .. 
r0 r1 rexrr.q .. 
r0 rindex rexrr.q .. 
rindex r0 rexrr.q .. 
r0 rindex rexrr.q .. 
r2 r2 modrr .. 
r0 r0 modrr .. 
r0 r2 modrr .. 
r2 r0 modrr .. 

:: q code r0 r0 mov, ret,
13 q .. 

rindex r0 rexrs.q .. 
r0 rindex rexrs.q .. 

: q for 2a emit aft 2b emit then 2c emit I . over cr ;
5 q

\ : fib 
\  | if | 1- if 1- | 1- fib >< fib + then then ;

see fib

0 fib .. cr 
1 fib .. cr 
2 fib .. cr 
3 fib .. cr 
4 fib .. cr 
5 fib .. cr 
6 fib .. cr 
7 fib .. cr 
8 fib .. cr 
9 fib .. cr 

\ : fib \ n
\   0 1 >>> for >| + >< over _ ;

\ see fib

1 fib .. cr 
2 fib .. cr 
3 fib .. cr 
4 fib .. cr 
5 fib .. cr 
6 fib .. cr 
7 fib .. cr 
8 fib .. cr 
9 fib .. cr 

\ : q abort" AAA!" ;		Need (") implemented to make this work

: q        2a emit ;
% q        2b emit %;
q
\ regalloc q
\ q
\ 88 99 regalloc | .. .. ..
\ 88 11 22 regalloc + .. ..
\ 88 11 22 regalloc + .. ..
\ : q + + ;
\ :^ ?^ ?^ ?^ 3 ^> q .. 
\ see fib
\ :^ ?^ 1 ^> fib
: q for I . over ;
99 40 q ..

see cs4
cold
:^ ?^ 1 cr .S cr  ^> cs4

cold
:: reg-stack 3 stack
reg-stack stack@ .S
10 reg-stack >s
20 reg-stack >s
30 reg-stack >s
reg-stack s> ..
reg-stack s> ..
reg-stack s> ..
reg-stack s> ..

reg-stack stack@ .S


words
.\ Tests finished successfully

